import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, useUser, UserButton, SignIn } from "@clerk/nextjs";
// import Link from "next/link";

import {  api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

import dayjs from 'dayjs'

import relativeTime from 'dayjs/plugin/relativeTime'
import Image from "next/image";
dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser();



  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        className=" h-14 w-14 rounded-full"
        src={user.profileImageUrl}
        width={56}
        height={56}
        alt="Profile image"
      
      />

      <input
        type="text"
        placeholder="Type some emojis!"
        className="grow  bg-transparent outline-none"
      />
    </div>
  ); 
};

type PostWithUser = RouterOutputs["posts"]["getAll"][ number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div key={post.id} className="border-b border-slate-400 p-4 flex  gap-3" >
      <Image  className=" h-14 w-14 rounded-full" src={author.profilePicture}  alt={`@`} 
       width={56}
        height={56} 
      
        />
      <div className="flex flex-col"> 
      
      { author.username ?

        <div className="flex gap-1 text-slate-300 "> <span>{`@${author.username}`}</span> <span className="font-thin">{` ·  ${dayjs(post.createdAt).fromNow()} `}</span>  </div> 
        :
        <div className="flex gap-1 text-slate-300 "> <span>{`@Desconhecido`}</span><span className="font-thin">{` ·  ${dayjs(post.createdAt).fromNow()} `}</span>  </div>

      }
 
      <span>{post.content}</span> 
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const user = useUser();
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading</div>;

  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex h-screen justify-center">
        <div className=" w-full border-x border-slate-400 md:max-w-2xl ">
          <div className="flex border-b border-slate-400 p-4">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}

            {user.isSignedIn && <CreatePostWizard />}
          </div>

          {/* <UserButton /> */}

          <div className=" flex flex-col text-white">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
